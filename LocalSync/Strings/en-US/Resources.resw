<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutSettingHeaderUID.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ChooseDropDownButtonUid.Content" xml:space="preserve">
    <value>Choose Files / Folders</value>
  </data>
  <data name="ComputerDescription" xml:space="preserve">
    <value>All devices with this software installed will automatically appear here. If not, please check your firewall settings.</value>
  </data>
  <data name="computerSharingNavUid.Content" xml:space="preserve">
    <value>Computers</value>
  </data>
  <data name="ComputersTitle.Text" xml:space="preserve">
    <value>Computers in this Network</value>
  </data>
  <data name="ComputerSubtitle" xml:space="preserve">
    <value>Devices you can transfer to</value>
  </data>
  <data name="currentSavedPath" xml:space="preserve">
    <value>Current File Saved Path: </value>
  </data>
  <data name="DeleteFileFailed_Message" xml:space="preserve">
    <value>Unable to delete some files / folders. Please delete manually. </value>
  </data>
  <data name="DeleteFileFailed_Title" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="DeleteFilesUid.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="FileListViewHeadingUid.Text" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="FolderListViewHeadingUid.Text" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="HomeNavUid.Content" xml:space="preserve">
    <value>Home Page</value>
  </data>
  <data name="HomeTitle.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="LanguageSettingHeadingUid.Description" xml:space="preserve">
    <value>Choose the language of this application</value>
  </data>
  <data name="LanguageSettingHeadingUid.Header" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="OpenContainingFolderUid.Label" xml:space="preserve">
    <value>Open Containing Folder</value>
  </data>
  <data name="OpenFailedinfoBar_Message" xml:space="preserve">
    <value>File may be already deleted, unable to open this file</value>
  </data>
  <data name="OpenFailedInfoBar_Title" xml:space="preserve">
    <value>Unable to open</value>
  </data>
  <data name="OpenThisFileUid.Label" xml:space="preserve">
    <value>Open File / Folder</value>
  </data>
  <data name="pcNameHeadingUid.Description" xml:space="preserve">
    <value>Name of your device that will display on other computers in this network</value>
  </data>
  <data name="pcNameHeadingUid.Header" xml:space="preserve">
    <value>PC Name</value>
  </data>
  <data name="pickFilesBtnUid.Text" xml:space="preserve">
    <value>Select Files</value>
  </data>
  <data name="pickFoldersBtnUid.Text" xml:space="preserve">
    <value>Select a folder</value>
  </data>
  <data name="PickSavedPath_Uid.Content" xml:space="preserve">
    <value>Choose Files' Save Path</value>
  </data>
  <data name="ReceiveNavUid.Content" xml:space="preserve">
    <value>Received Page</value>
  </data>
  <data name="RecvCardDescription" xml:space="preserve">
    <value>All received files and folders will be displayed on this page. Transferred files and folders will automatically be stored here. You can change the folder location in the settings.</value>
  </data>
  <data name="RecvCardSubtitle" xml:space="preserve">
    <value>Received files and folders </value>
  </data>
  <data name="RecvDeviceNameText.Text" xml:space="preserve">
    <value>Not Set</value>
  </data>
  <data name="RecvFileHeading.Text" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="RecvFolderHeading.Text" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="RecvTitle.Text" xml:space="preserve">
    <value>Received Files</value>
  </data>
  <data name="RemoveAll_SelectedUploadFiles_UID.Label" xml:space="preserve">
    <value>Remove All</value>
  </data>
  <data name="RemoveSelected_SelectedUploadFiles_UID.Label" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ResetPickSavedPath_Uid.Content" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ResetSavedPathHint" xml:space="preserve">
    <value>Set saved path to default</value>
  </data>
  <data name="ResetSavedPathHintHeader" xml:space="preserve">
    <value>Files will now save to: </value>
  </data>
  <data name="ResetSavedPathSuccess" xml:space="preserve">
    <value>Done!</value>
  </data>
  <data name="savePathFolderHeadingUid.Description" xml:space="preserve">
    <value>File Saved Path</value>
  </data>
  <data name="savePathFolderHeadingUid.Header" xml:space="preserve">
    <value>Saved Folder Path</value>
  </data>
  <data name="SendCardDescription" xml:space="preserve">
    <value>Choose the files / folders you would like to transfer to the other devices.</value>
  </data>
  <data name="SendCardSubtitle" xml:space="preserve">
    <value>Send files via LAn</value>
  </data>
  <data name="SenderNavUid.Content" xml:space="preserve">
    <value>Send Files</value>
  </data>
  <data name="SenderTitle.Text" xml:space="preserve">
    <value>Transfer Files</value>
  </data>
  <data name="SettingTitle.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Setting_Description" xml:space="preserve">
    <value>Setup device name, saved path, language, etc...</value>
  </data>
  <data name="Setting_Subtitle" xml:space="preserve">
    <value>Configure Application Options</value>
  </data>
  <data name="Setting_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="startBtnUid.Content" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="transferInfoBarMessageHintAddFile" xml:space="preserve">
    <value>Adding files by clicking "Choose Files / Folders"</value>
  </data>
  <data name="transferInfoBarMessageHintUnselected" xml:space="preserve">
    <value>Please go to "Computers" to setup target device.</value>
  </data>
  <data name="transferInfoBarTitleHintAddFile" xml:space="preserve">
    <value>Add Files</value>
  </data>
  <data name="transferInfoBarTitleHintUnselected" xml:space="preserve">
    <value>Device Not Selected</value>
  </data>
</root>